head(1)
Athlete%>%
filter(Event == 'MK1 500m') %>%
filter(Name == 'Ethan Neville') %>%
filter(Age %in% c("Open", 'U23', 'U18')) %>%
filter(Comp == "Nationals") %>%
dplyr::group_by(Year) %>%
arrange(factor(Round, levels = target), .by_group = TRUE) %>%
head(1, .by_group = TRUE)
Athlete%>%
filter(Event == 'MK1 500m') %>%
filter(Name == 'Ethan Neville') %>%
filter(Age %in% c("Open", 'U23', 'U18')) %>%
filter(Comp == "Nationals") %>%
dplyr::group_by(Year) %>%
arrange(factor(Round, levels = target), .by_group = TRUE) %>%
slice(1)
x <- unique(Athlete$Round)
unique(Athlete$Round)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
Prognostic.Velocities <- data.frame(fread("Prognostic Velocities.csv", header = TRUE, stringsAsFactors=FALSE))
View(Prognostic.Velocities)
Prognostic.Velocities <- data.frame(fread("Prognostic Velocities.csv", header = TRUE, stringsAsFactors=FALSE))
ClassProgSpeed <-  Prognostic.Velocities %>% filter(BoatClass=="MK1 500m")
ClassProgSpeed <- ClassProgSpeed[1,'ProgSpeed']
WBTSpeed <-  Prognostic.Velocities %>% filter(BoatClass=="MK1 500m")
WBTSpeed <- WBTSpeed[1,'WBTSpeed']
View(Athlete)
testa <- Athlete%>%
filter(Event == "MK1 500m") %>%
filter(Name == "Murray Stewart") %>%
filter(Age == "Senior") %>%
dplyr::group_by(Year) %>% dplyr::filter(Time_sec == min(Time_sec))
View(testa)
Athlete%>%
filter(Event == "MK1 500m")
Athlete%>%
filter(Event == "MK1 500m") %>%
filter(Name == "Murray Stewart") %>%
filter(Age == "Senior") %>%
Athlete%>%
filter(Event == "MK1 500m") %>%
filter(Name == "Murray Stewart") %>%
filter(Age == "Senior")
Athlete%>%
filter(Event == "MK1 500m") %>%
filter(Name == "Murray Stewart") %>%
filter(Age == "Senior")
View(Athlete)
Athlete%>%
filter(Event == "MK1 500m")
testa <- Athlete%>%
filter(Event == "MK1 500m") %>%
filter(Name == "Murray Stewart") %>%
filter(Age == "Open") %>%
dplyr::group_by(Year) %>% dplyr::filter(Time_sec == min(Time_sec))
View(testa)
mutate(OffWBT = 100-Time_sec/WBTSec)
testa <- Athlete%>%
filter(Event == "MK1 500m") %>%
filter(Name == "Murray Stewart") %>%
filter(Age == "Open") %>%
dplyr::group_by(Year) %>% dplyr::filter(Time_sec == min(Time_sec)) %>%
mutate(OffWBT = 100-Time_sec/WBTSec)
testa <- Athlete%>%
filter(Event == "MK1 500m") %>%
filter(Name == "Murray Stewart") %>%
filter(Age == "Open") %>%
dplyr::group_by(Year) %>% dplyr::filter(Time_sec == min(Time_sec)) %>%
mutate(OffWBT = 100-Time_sec/WBTsec)
ClassProgTimeSec <-  Prognostic.Velocities %>% filter(BoatClass=="MK1 500m")
ClassProgTimeSec <- ClassProgTimeSec[1,'ProgTimesec']
WBTsec <-  Prognostic.Velocities %>% filter(BoatClass=="MK1 500m")
WBTsec <- WBTSec[1,'WBTsec']
WBTsec <- WBTsec[1,'WBTsec']
testa <- Athlete%>%
filter(Event == "MK1 500m") %>%
filter(Name == "Murray Stewart") %>%
filter(Age == "Open") %>%
dplyr::group_by(Year) %>% dplyr::filter(Time_sec == min(Time_sec)) %>%
mutate(OffWBT = 100-Time_sec/WBTsec)
testa <- Athlete%>%
filter(Event == "MK1 500m") %>%
filter(Name == "Murray Stewart") %>%
filter(Age == "Open") %>%
dplyr::group_by(Year) %>% dplyr::filter(Time_sec == min(Time_sec)) %>%
mutate(OffWBT = Time_sec/WBTsec)
testa <- Athlete%>%
filter(Event == "MK1 500m") %>%
filter(Name == "Murray Stewart") %>%
filter(Age == "Open") %>%
dplyr::group_by(Year) %>% dplyr::filter(Time_sec == min(Time_sec)) %>%
mutate(OffWBT = (((Time_sec-WBTsec)/Time_sec)*100))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
asdas
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(Prognostic.Velocities)
runApp()
runApp()
runApp()
runApp()
runApp()
WBT <- Prognostic.Velocities %>% filter(BoatClass=="MK1 500m") %>% select(WBT, WBTsec,WBTSpeed)
Prog <- Prognostic.Velocities %>% filter(BoatClass=="MK1 500m") %>% select(ProgTime, ProgTimesec,ProgSpeed)
tableWBT <- bind_rows(WBT[1,], Prog[1,])
View(tableWBT)
tableWBT <- bind_rows(unname(WBT), unname(Prog))
tableWBT <- bind_rows(WBT, unname(Prog))
colnames(Prog) = colnames(WBT)
tableWBT <- bind_rows(WBT, Prog)
View(tableWBT)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ClassProgTimeSec <-  Prognostic.Velocities %>% filter(BoatClass==input$Event)
ClassProgTimeSec <- ClassProgTimeSec[1,'ProgTimesec']
WBTsec <-  Prognostic.Velocities %>% filter(BoatClass==input$Event)
WBTsec <- WBTsec[1,'WBTsec']
Athlete%>%
filter(Event == "MK1 500m") %>%
filter(Name == "Murray Stewart") %>%
filter(Age == "Open") %>%
arrange(Year) %>%
head(10) %>%
mutate('Off WBT %' = round((((Time_sec-WBTsec)/Time_sec)*100),digits = 2)) %>%
mutate('Off Prog %' = round((((Time_sec-ClassProgTimeSec)/Time_sec)*100),digits = 2))
ClassProgTimeSec <-  Prognostic.Velocities %>% filter(BoatClass==input$Event)
ClassProgTimeSec <- ClassProgTimeSec[1,'ProgTimesec']
WBTsec <-  Prognostic.Velocities %>% filter(BoatClass==input$Event)
ClassProgTimeSec <-  Prognostic.Velocities %>% filter(BoatClass=="MK1 500m")
ClassProgTimeSec <- ClassProgTimeSec[1,'ProgTimesec']
WBTsec <-  Prognostic.Velocities %>% filter(BoatClass=="MK1 500m")
WBTsec <- WBTsec[1,'WBTsec']
Testa <- Athlete%>%
filter(Event == "MK1 500m") %>%
filter(Name == "Murray Stewart") %>%
filter(Age == "Open") %>%
arrange(Year) %>%
head(10) %>%
mutate('Off WBT %' = round((((Time_sec-WBTsec)/Time_sec)*100),digits = 2)) %>%
mutate('Off Prog %' = round((((Time_sec-ClassProgTimeSec)/Time_sec)*100),digits = 2))
#observeEvent(input$goButton, {
#### Read data into a list ####
Athlete <-  load_db("Athlete.csv")
Benchmark <-load_db("Benchmark.csv")
Athlete%>%
filter(Event == input$Event) %>%
filter(Name == input$Name) %>%
filter(Age == input$Age) %>%
arrange(Year) %>%
head(10) %>%
mutate('Off WBT %' = round((((Time_sec-WBTsec)/Time_sec)*100),digits = 2)) %>%
mutate('Off Prog %' = round((((Time_sec-ClassProgTimeSec)/Time_sec)*100),digits = 2))
Testa <- Athlete%>%
filter(Event == "MK1 500m") %>%
filter(Name == "Murray Stewart") %>%
filter(Age == "Open") %>%
arrange(Year) %>%
head(10) %>%
mutate('Off WBT %' = round((((Time_sec-WBTsec)/Time_sec)*100),digits = 2)) %>%
mutate('Off Prog %' = round((((Time_sec-ClassProgTimeSec)/Time_sec)*100),digits = 2))
View(Testa)
ggplot(data=Testa, aes=x(Year, y=`Off WBT %`))
ggplot(data=Testa, aes=x(Year, y=`Off WBT %`)) + geom_line()
ggplot(data=Testa, aes(x=Year, y=`Off WBT %`)) + geom_line()
Annualplot  <-  ggplot(data=Testa, aes(x=Year, y=`Off WBT %`,
text = paste('Year: ', Year, '\n',
'Time: ', format(Time, "%M:%S.%OS"), '\n',
'Name: ', Name_order, '\n',
'Round: ', Round, '\n'))) + geom_point(size=2) + geom_line(size=1)
ggplotly(Annualplot, tooltip = 'text') %>% layout(hovermode = 'compare') %>% config(displayModeBar = F)
Annualplot  <-  ggplot(data=Testa, aes(x=Year, y=`Off WBT %`,
text = paste('Year: ', Year, '\n',
'Off WBT %: ', `Off WBT %`, '\n',
'Name: ', Name, '\n'))) + geom_point(size=2) + geom_line(size=1)
ggplotly(Annualplot, tooltip = 'text') %>% layout(hovermode = 'compare') %>% config(displayModeBar = F)
Annualplot  <-  ggplot(data=Testa, aes(x=Year, y=`Off WBT %`, colour = Name,
text = paste('Year: ', Year, '\n',
'Off WBT %: ', `Off WBT %`, '\n',
'Name: ', Name, '\n'))) + geom_point(size=2) + geom_line(size=1)
ggplotly(Annualplot, tooltip = 'text') %>% layout(hovermode = 'compare') %>% config(displayModeBar = F)
Annualplot  <-  ggplot(data=Testa, aes(x=Year, y=`Off WBT %`, colour = Name,
text = paste('Year: ', Year, '\n',
'Off WBT %: ', `Off WBT %`, '\n',
'Name: ', Name, '\n'))) + geom_line(size=1)
ggplotly(Annualplot, tooltip = 'text') %>% layout(hovermode = 'compare') %>% config(displayModeBar = F)
Annualplot  <-  ggplot(data=Testa, aes(x=Year, y=`Off WBT %`, colour = Name,
text = paste('Year: ', Year, '\n',
'Off WBT %: ', `Off WBT %`, '\n',
'Name: ', Name, '\n'))) + geom_path(size=1)
ggplotly(Annualplot, tooltip = 'text') %>% layout(hovermode = 'compare') %>% config(displayModeBar = F)
runApp()
runApp()
runApp()
View(Athlete)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
View(AnnualplotdataLast10)
AnnualplotdataLast10$Name_order <- AnnualplotdataLast10$Name
AnnualplotdataLast10$Name_order <- AnnualplotdataLast10$Name %>%
factor(levels = c(input$Name, input$Name2))
AnnualplotdataLast10$Name_order <- AnnualplotdataLast10$Name %>%
factor(levels = c(	"Jo Brigden-Jones", "Kailey Harlen"))
AnnualplotdataLast10$Name_order <- AnnualplotdataLast10$Name %>%
factor(levels = c(	"Jo Brigden-Jones", "Kailey Harlen"))
AnnualplotLast10  <-  ggplot(data=AnnualplotdataLast10, aes(x=Year, y=Time, group=Name_order, colour=Name_order,linetype = Name_order,
text = paste('Year: ', Year, '\n',
'Time: ', format(Time, "%M:%S.%OS"), '\n',
'Name: ', Name_order, '\n',
'Round: ', Round, '\n'))) + geom_point(size=2) + geom_line(size=1) +
scale_y_datetime(date_labels="%M:%S.%OS") +
scale_colour_manual(name = "", values = mycolors, labels = Name_order) + scale_linetype_manual(name = "", values = linetype2, labels = Name_order)
mycolors <- c("red", "blue")
linetype2 <- c("solid", "solid")
AnnualplotLast10  <-  ggplot(data=AnnualplotdataLast10, aes(x=Year, y=Time, group=Name_order, colour=Name_order,linetype = Name_order,
text = paste('Year: ', Year, '\n',
'Time: ', format(Time, "%M:%S.%OS"), '\n',
'Name: ', Name_order, '\n',
'Round: ', Round, '\n'))) + geom_point(size=2) + geom_line(size=1) +
scale_y_datetime(date_labels="%M:%S.%OS") +
scale_colour_manual(name = "", values = mycolors, labels = Name_order) + scale_linetype_manual(name = "", values = linetype2, labels = Name_order)
Name_order <- c("Jo Brigden-Jones", "Kailey Harlen")
AnnualplotLast10  <-  ggplot(data=AnnualplotdataLast10, aes(x=Year, y=Time, group=Name_order, colour=Name_order,linetype = Name_order,
text = paste('Year: ', Year, '\n',
'Time: ', format(Time, "%M:%S.%OS"), '\n',
'Name: ', Name_order, '\n',
'Round: ', Round, '\n'))) + geom_point(size=2) + geom_line(size=1) +
scale_y_datetime(date_labels="%M:%S.%OS") +
scale_colour_manual(name = "", values = mycolors, labels = Name_order) + scale_linetype_manual(name = "", values = linetype2, labels = Name_order)
ggplotly(AnnualplotLast10, tooltip = 'text') %>% layout(hovermode = 'compare') %>% config(displayModeBar = F)
AnnualplotLast10  <-  ggplot(data=AnnualplotdataLast10, aes(x=Year, y=Time, group=Name_order, colour=Name_order,linetype = Name_order,
text = paste('Year: ', Year, '\n',
'Time: ', format(Time, "%m:%s.%os"), '\n',
'Name: ', Name_order, '\n',
'Round: ', Round, '\n'))) + geom_point(size=2) + geom_line(size=1) +
scale_y_datetime(date_labels="%M:%S.%OS") +
scale_colour_manual(name = "", values = mycolors, labels = Name_order) + scale_linetype_manual(name = "", values = linetype2, labels = Name_order)
ggplotly(AnnualplotLast10, tooltip = 'text') %>% layout(hovermode = 'compare') %>% config(displayModeBar = F)
AnnualplotLast10  <-  ggplot(data=AnnualplotdataLast10, aes(x=Year, y=Time, group=Name_order, colour=Name_order,linetype = Name_order,
text = paste('Year: ', Year, '\n',
'Time: ', '\n',
'Name: ', Name_order, '\n',
'Round: ', Round, '\n'))) + geom_point(size=2) + geom_line(size=1) +
scale_y_datetime(date_labels="%M:%S.%OS") +
scale_colour_manual(name = "", values = mycolors, labels = Name_order) + scale_linetype_manual(name = "", values = linetype2, labels = Name_order)
ggplotly(AnnualplotLast10, tooltip = 'text') %>% layout(hovermode = 'compare') %>% config(displayModeBar = F)
AnnualplotLast10  <-  ggplot(data=AnnualplotdataLast10, aes(x=Year, y=Time, group=Name_order, colour=Name_order,linetype = Name_order,
text = paste('Year: ', Year, '\n',
'Time: ', Time, '\n',
'Name: ', Name_order, '\n',
'Round: ', Round, '\n'))) + geom_point(size=2) + geom_line(size=1) +
scale_y_datetime(date_labels="%M:%S.%OS") +
scale_colour_manual(name = "", values = mycolors, labels = Name_order) + scale_linetype_manual(name = "", values = linetype2, labels = Name_order)
ggplotly(AnnualplotLast10, tooltip = 'text') %>% layout(hovermode = 'compare') %>% config(displayModeBar = F)
v$Annual_plot_dataLast10 <-  bind_rows(tab_AthleteLast10())
runApp()
AnnualplotdataLast10 <- Annual_plot_dataLast10()
AnnualplotLast10  <-  ggplot(data=AnnualplotdataLast10, aes(x=Year, y=`Off WBT %`, group=Name_order, colour=Name_order,linetype = Name_order,
text = paste('Name: ', Name_order, '\n',
'Year: ', Year, '\n',
'Comp: ', Comp, '\n',
'Round: ', Round, '\n',
'Off WBT %: ', `Off WBT %`, '\n'
))) + geom_point(size=2) + geom_line(size=1) +
scale_colour_manual(name = "", values = mycolors, labels = Name_order) + scale_linetype_manual(name = "", values = linetype2, labels = Name_order)
ggplotly(AnnualplotLast10, tooltip = 'text') %>% layout(hovermode = 'compare') %>% config(displayModeBar = F)
Name_order <- c("Jo Brigden-Jones")
mycolors <- c("red")
linetype2 <- c("solid")
AnnualplotLast10  <-  ggplot(data=AnnualplotdataLast10, aes(x=Year, y=`Off WBT %`, group=Name_order, colour=Name_order,linetype = Name_order,
text = paste('Name: ', Name_order, '\n',
'Year: ', Year, '\n',
'Comp: ', Comp, '\n',
'Round: ', Round, '\n',
'Off WBT %: ', `Off WBT %`, '\n'
))) + geom_point(size=2) + geom_line(size=1) +
scale_colour_manual(name = "", values = mycolors, labels = Name_order) + scale_linetype_manual(name = "", values = linetype2, labels = Name_order)
ggplotly(AnnualplotLast10, tooltip = 'text') %>% layout(hovermode = 'compare') %>% config(displayModeBar = F)
runApp()
runApp()
View(AnnualplotdataLast10)
Name_order <- c("Jo Brigden-Jones", "Kailey Harlen")
mycolors <- c("red", "blue")
linetype2 <- c("solid", "solid")
AnnualplotLast10  <-  ggplot(data=AnnualplotdataLast10, aes(x=Year, y=`Off WBT %`, group=Name_order, colour=Name_order,linetype = Name_order,
text = paste('Name: ', Name_order, '\n',
'Year: ', Year, '\n',
'Comp: ', Comp, '\n',
'Round: ', Round, '\n',
'Off WBT %: ', `Off WBT %`, '\n'
))) + geom_point(size=2) + geom_line(size=1) +
scale_colour_manual(name = "", values = mycolors, labels = Name_order) + scale_linetype_manual(name = "", values = linetype2, labels = Name_order)
ggplotly(AnnualplotLast10, tooltip = 'text') %>% layout(hovermode = 'compare') %>% config(displayModeBar = F)
AnnualplotdataLast10$Name_order <- AnnualplotdataLast10$Name %>%
factor(levels = c("Jo Brigden-Jones", "Kailey Harlen"))
AnnualplotLast10  <-  ggplot(data=AnnualplotdataLast10, aes(x=Year, y=`Off WBT %`, group=Name_order, colour=Name_order,linetype = Name_order,
text = paste('Name: ', Name_order, '\n',
'Year: ', Year, '\n',
'Comp: ', Comp, '\n',
'Round: ', Round, '\n',
'Off WBT %: ', `Off WBT %`, '\n'
))) + geom_point(size=2) + geom_line(size=1) +
scale_colour_manual(name = "", values = mycolors, labels = Name_order) + scale_linetype_manual(name = "", values = linetype2, labels = Name_order)
ggplotly(AnnualplotLast10, tooltip = 'text') %>% layout(hovermode = 'compare') %>% config(displayModeBar = F)
runApp()
shiny::runApp()
runApp()
Prognostic.Velocities <- data.frame(fread("Prognostic Velocities.csv", header = TRUE, stringsAsFactors=FALSE))
library(shiny)
library(shinydashboard)
library(shinythemes)
library(quantmod)
library(zoo)
library(R.utils)
library(tableHTML)
library(svDialogs)
library(stringr)
library(plyr)
library(reshape2)
library(formattable)
library(matrixStats)
library(broom)
library(tibble)
library(Rmisc)
library(DT)
library(data.table)
library(dplyr)
library(DT)
library(tidyverse)
library(lubridate) #for ms
library(hms)
library(scales)
library(plotly)
library(htmlwidgets)
library(ggplot2)
library(ggthemes)
library(plotly)
library(rdrop2)
library(RColorBrewer)
Prognostic.Velocities <- data.frame(fread("Prognostic Velocities.csv", header = TRUE, stringsAsFactors=FALSE))
View(Prognostic.Velocities)
columns(Prognostic.Velocities)
library(sparkR)
colnames(Prognostic.Velocities)
Prognostic.Velocities %>% filter(BoatClass==MK1500) %>% select(ProgTime100, ProgTimesec100, ProgSpeed100,
ProgTime97, ProgTimesec97, ProgSpeed97,
ProgTime95, ProgTimesec95, ProgSpeed95,
ProgTime93, ProgTimesec93, ProgSpeed93)
Prognostic.Velocities %>% filter(BoatClass== "MK1500") %>% select(ProgTime100, ProgTimesec100, ProgSpeed100,
ProgTime97, ProgTimesec97, ProgSpeed97,
ProgTime95, ProgTimesec95, ProgSpeed95,
ProgTime93, ProgTimesec93, ProgSpeed93)
a <-  Prognostic.Velocities %>% filter(BoatClass=="MK1500") %>% select(ProgTime100, ProgTimesec100, ProgSpeed100,
ProgTime97, ProgTimesec97, ProgSpeed97,
ProgTime95, ProgTimesec95, ProgSpeed95,
ProgTime93, ProgTimesec93, ProgSpeed93)
View(a)
a <-  Prognostic.Velocities %>% filter(BoatClass=="MK1 500m") %>% select(ProgTime100, ProgTimesec100, ProgSpeed100,
ProgTime97, ProgTimesec97, ProgSpeed97,
ProgTime95, ProgTimesec95, ProgSpeed95,
ProgTime93, ProgTimesec93, ProgSpeed93)
View(Benchmark)
b <-  data.frame(a[,1:3], a[,4:6], a[,7:9], a[,10:12])
View(b)
b <-  rbind(a[,1:3], a[,4:6], a[,7:9], a[,10:12])
b <-  bind_rows(a[,1:3], a[,4:6], a[,7:9], a[,10:12])
View(b)
a <-  Prognostic.Velocities %>% filter(BoatClass=="MK1 500m") %>% data.matrix(select(ProgTime100, ProgTimesec100, ProgSpeed100,
ProgTime97, ProgTimesec97, ProgSpeed97,
ProgTime95, ProgTimesec95, ProgSpeed95,
ProgTime93, ProgTimesec93, ProgSpeed93))
a <- data.matrix(a)
View(a)
a <-  Prognostic.Velocities %>% filter(BoatClass=="MK1 500m") %>% select(ProgTime100, ProgTimesec100, ProgSpeed100,
ProgTime97, ProgTimesec97, ProgSpeed97,
ProgTime95, ProgTimesec95, ProgSpeed95,
ProgTime93, ProgTimesec93, ProgSpeed93)
b[1,] <-  a[,1:3]
rm(b)
b[1,] <-  a[,1:3]
b=nULL
b=NULL
b[1,] <-  a[,1:3]
b[1,1:3] <-  a[1,1:3]
b[1] <-  a[1,1:3]
b[1] <-
a[1,1:3]
a[1,1:3]
b=0
b[1,] = a[1,1:3]
rm(b)
b <-  c(a[,1:3], a[,4:6], a[,7:9], a[,10:12])
View(b)
data.frame(b)
b <-  as.dataframe(c(a[,1:3], a[,4:6], a[,7:9], a[,10:12]))
b <-  as.data.frame(c(a[,1:3], a[,4:6], a[,7:9], a[,10:12]))
View(b)
Prog100 = a[,1:3]
Prog97 <-  a[,4:6]
Prog95 <- a[,7:9]
Prog93 <- a[,10:12]
rm(b)
b <- rbind(Prog100, Prog97, Prog95, Prog93)
colnames(Prog100)=colnames(Prog97)=colnames(Prog95)=colnames(Prog93) = c("Prognostic Time", "in seconds", "Avg Speed (km/hr)")
View(Prog100)
b <- rbind(Prog100, Prog97, Prog95, Prog93)
View(b)
runApp()
runApp()
View(AnnualplotdataLast10)
runApp()
View(AnnualplotdataLast10)
runApp()
View(AnnualplotdataLast10)
runApp()
View(AnnualplotdataLast10)
runApp()
runApp()
runApp()
runApp()
View(AnnualplotdataLast10)
View(AnnualplotdataLast10)
runApp()
View(AnnualplotdataLast10)
ClassProgTimeSec <-  Prognostic.Velocities %>% filter(BoatClass=="MK1 500m")%>% select(ProgTimesec100)
View(ClassProgTimeSec)
ClassProgTimeSec <- ClassProgTimeSec[1,1]
#observeEvent(input$goButton, {
#### Read data into a list ####
Athlete <-  load_db("Athlete.csv")
Benchmark <-load_db("Benchmark.csv")
a = Athlete %>%
filter(Event == "MK1 500m") %>%
filter(Name == "Murray Stewart") %>%
filter(Age == "Open") %>%
dplyr::group_by(Year) %>% dplyr::filter(Time_sec == min(Time_sec)) %>%
dplyr::mutate("% of Prog" := round(((ClassProgTimeSec/Time_sec)*100),digits = 2))
View(a)
runApp()
runApp()
runApp()
runApp()
View(AnnualplotdataLast10)
View(Athlete)
#observeEvent(input$goButton, {
#### Read data into a list ####
Athlete <-  load_db("Athlete.csv")
View(Athlete)
names(Athlete)[10] <- "Time"
runApp()
runApp()
shiny::runApp()
View(AnnualplotdataLast10)
runApp()
runApp()
shiny::runApp()
